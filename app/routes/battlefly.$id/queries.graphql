#import '../../graphql/flydex.graphq'

query GetBattlefly($id: Int!) {
  battlefly_flydex(where: { token_id: { _eq: $id } }) {
    ...Battlefly
    stat_armor_base
    stat_armor_current
    stat_battery_base
    stat_battery_current
    stat_critical_base
    stat_critical_current
    stat_critical_damage_base
    stat_critical_damage_current
    stat_critical_resists_base
    stat_critical_resists_current
    stat_evasion_base
    stat_evasion_current
    stat_hit_points_base
    stat_hit_points_current
    stat_hit_points_regen_base
    stat_hit_points_regen_current
    stat_loot_base
    stat_loot_current
    stat_scavenge_base
    stat_scavenge_current
    stat_shield_base
    stat_shield_current
    stat_shield_regen_base
    stat_shield_regen_current
    token {
      owner
      price
      treasure_tag {
        display_name
      }
    }
    traits {
      trait {
        description
        tags
        value
      }
    }
    updated_at
    win_loss {
      battles_24h
      battles_3d
      battles_7d
      battles_today
      losses_24h
      losses_3d
      losses_7d
      losses_today
      wins_24h
      wins_3d
      wins_7d
      wins_today
      wl_ratio_24h
      wl_ratio_3d
      wl_ratio_7d
      wl_ratio_today
    }
  }
}

query GetCombatHistory($limit: Int!, $offset: Int!, $id: Int!) {
  battlefly_combat(
    limit: $limit
    offset: $offset
    order_by: { created_at: desc }
    where: { _or: [{ loser_id: { _eq: $id } }, { winner_id: { _eq: $id } }] }
  ) {
    created_at
    id
    location
    loser {
      token_id
      ...Battlefly
    }
    loser_slot_0_mod {
      ...Mod
    }
    loser_slot_1_mod {
      ...Mod
    }
    loser_slot_2_mod {
      ...Mod
    }
    loser_slot_3_mod {
      ...Mod
    }
    winner {
      token_id
      ...Battlefly
    }
    winner_slot_0_mod {
      ...Mod
    }
    winner_slot_1_mod {
      ...Mod
    }
    winner_slot_2_mod {
      ...Mod
    }
    winner_slot_3_mod {
      ...Mod
    }
  }
}

query GetCombatHistoryTotal($id: Int!) {
  battlefly_combat_aggregate(
    where: { _or: [{ loser_id: { _eq: $id } }, { winner_id: { _eq: $id } }] }
  ) {
    aggregate {
      count
    }
  }
}

query GetLoadoutPerformance($limit: Int!, $offset: Int!, $id: Int!) {
  battlefly_win_loss_loadout(
    limit: $limit
    offset: $offset
    order_by: { changed_at: desc }
    where: { token_id: { _eq: $id } }
  ) {
    battles
    changed_at
    losses
    slot_0 {
      ...Mod
    }
    slot_1 {
      ...Mod
    }
    slot_2 {
      ...Mod
    }
    slot_3 {
      ...Mod
    }
    wins
    wl_ratio
  }
}

query GetLoadoutPerformanceTotal($id: Int!) {
  battlefly_win_loss_loadout_aggregate(where: { token_id: { _eq: $id } }) {
    aggregate {
      count
    }
  }
}

query GetMaxRank {
  battlefly_flydex_aggregate {
    aggregate {
      max {
        rank
      }
    }
  }
}
